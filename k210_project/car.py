# generated by maixhub, tested on maixpy3 v0.4.8
# copy files to TF card and plug into board and power on
import sensor, image, lcd, time
import KPU as kpu
from machine import UART,Timer
import gc, sys
from fpioa_manager import fm

##############  START   ################################################
input_size = (224, 224)
labels = ['car']
anchors = [0.81, 0.66, 1.69, 1.31, 1.16, 0.91, 0.88, 1.47, 2.53, 2.03]
##############  STOP    ################################################
def lcd_show_except(e):
    import uio
    err_str = uio.StringIO()
    sys.print_exception(e, err_str)
    err_str = err_str.getvalue()
    img = image.Image(size=input_size)
    lcd.display(img)

class Comm:
    def __init__(self, uart):
        self.uart = uart

    def send_detect_result(self, objects, labels):
        msg = ""
        for obj in objects:
            pos = obj.rect()
            p = obj.value()
            idx = obj.classid()
            label = labels[idx]
            msg += "{}:{}:{}:{}:{}:{:.2f}:{}, ".format(pos[0], pos[1], pos[2], pos[3], idx, p, label)
        if msg:
            msg = msg[:-2] + "\n"
        #self.uart.write(msg.encode())

##############  START   ################################################
def init_uart():
    fm.register(6, fm.fpioa.UART1_TX, force=True)
    fm.register(7, fm.fpioa.UART1_RX,force=True)
    uart = UART(UART.UART1, 115200, 8, 0, 0, timeout=1000, read_buf_len=256)
    return uart
##############  STOP    ################################################

def main(anchors, labels = None, model_addr="/sd/m.kmodel", sensor_window=input_size, lcd_rotation=0, sensor_hmirror=1, sensor_vflip=1):
    sensor.reset()
    sensor.set_pixformat(sensor.RGB565)
    sensor.set_framesize(sensor.QVGA)
    sensor.set_windowing(sensor_window)
    sensor.set_hmirror(sensor_hmirror)


##############  START   ################################################
    sensor.set_vflip(sensor_vflip)
    sensor.set_brightness(0)                            # 亮度
    sensor.set_contrast(0)                              # 对比度
    sensor.set_auto_whitebal(0)                         # 白平衡
    sensor.run(1)

    lcd.init(type=1)
    lcd.rotation(lcd_rotation)
    lcd.clear(lcd.WHITE)
##############  STOP    ################################################


    if not labels:
        with open('labels.txt','r') as f:
            exec(f.read())
    if not labels:
        print("no labels.txt")
        img = image.Image(size=(320, 240))
        img.draw_string(90, 110, "no labels.txt", color=(255, 0, 0), scale=2)
        lcd.display(img)
        return 1
    try:
        img = image.Image("startup.jpg")
        lcd.display(img)
    except Exception:
        img = image.Image(size=(320, 240))
        img.draw_string(90, 110, "loading model...", color=(255, 255, 255), scale=2)
        lcd.display(img)

    stm_uart = init_uart()
    comm = Comm(stm_uart)


##############  START   ################################################
    rx_flag=0
    text='\0'
    user_color = (255, 200, 0)
    user_color0 = (200, 255, 0)
    user_color1 = (255, 0, 200)
    user_color2 = (0, 200, 200)
    SYSTEM_MOD = 1
##############  STOP    ################################################


    try:
        task = None
        task = kpu.load(model_addr)
        kpu.init_yolo2(task, 0.5, 0.3, 5, anchors) # threshold:[0,1], nms_value: [0, 1]
        while(True):
##############  START   ################################################
            rx=stm_uart.read() #读取数据->rx
            if rx: #如果读取到了数据
                rx_flag=1
                #stm_uart.write('I got '+rx.decode('utf-8')) #数据回传
                text=rx.decode('utf-8')#text是utf_8格式的rx
                if(text=='mod'):
                    SYSTEM_MOD^=1
                    rx_flag=0
##############  STOP    ################################################


            img = sensor.snapshot()
            t = time.ticks_ms()
            objects = kpu.run_yolo2(task, img)
            t = time.ticks_ms() - t



##############  START   ################################################
            if objects:
                #UART_A.write()
                for obj in objects:
                    pos = obj.rect()
                    centre_x=obj.x()+obj.w()/2
                    centre_y=obj.y()+obj.h()/2
                    cross_x=int(centre_x)
                    cross_y=int(centre_y)
                    CAR_WARNING=0
                    if(SYSTEM_MOD==1):                          #哨兵模式
                         if(cross_y>150):
                            stm_uart.write('car') #数据回传
                            img.draw_cross(cross_x,cross_y,color=user_color2,thickness=3)
                            img.draw_rectangle(pos, color=user_color2)
                            img.draw_string(pos[0], pos[1], "%s : %.2f" %(labels[obj.classid()], obj.value()), scale=2, color=user_color2)
                    if(SYSTEM_MOD==0):                          #行驶模式
                        if(cross_y>150):
                            if cross_y>37*cross_x/42+80/3:
                                if cross_y>-37*cross_x/42+244:
                                    CAR_WARNING=1
                                    stm_uart.write('CAR') #数据回传
                                    img.draw_rectangle(pos, color=user_color1)
                                    print('CAR')
                                    img.draw_cross(cross_x,cross_y,color=user_color1,thickness=3)
                                    img.draw_rectangle(pos, color=user_color1)
                                    img.draw_string(pos[0], pos[1], "%s : %.2f" %(labels[obj.classid()], obj.value()), scale=2, color=user_color)
                        car_warning=0
                        if(cross_y>140):
                            if CAR_WARNING==0:
                                if cross_y>180-cross_x:
                                    if cross_y>cross_x-44:
                                        car_warning=1
                                        stm_uart.write('car') #数据回传
                                        img.draw_rectangle(pos, color=user_color)
                                        print('car')
                                        img.draw_cross(cross_x,cross_y,color=user_color,thickness=3)
                                        img.draw_rectangle(pos, color=user_color)
                                        img.draw_string(pos[0], pos[1], "%s : %.2f" %(labels[obj.classid()], obj.value()), scale=2, color=user_color1)
                        if CAR_WARNING==0:
                            if car_warning==0:
                                img.draw_cross(cross_x,cross_y,color=user_color0,thickness=3)
                                img.draw_rectangle(pos, color=user_color0)
                                img.draw_string(pos[0], pos[1], "%s : %.2f" %(labels[obj.classid()], obj.value()), scale=2, color=user_color0)

                       ######mode0------------------------
                    comm.send_detect_result(objects, labels)
            if rx_flag:
                img.draw_string(0, 25, text, color=user_color0, scale=1.5)
            img.draw_string(0, 0, "t:%dms" %(t), scale=1.5, color=user_color0)
            if(SYSTEM_MOD==0):
                #正后方
                img.draw_line(0,224,84,150, color=user_color1, thickness=3)
                img.draw_line(224,224,140,150, color=user_color1, thickness=3)
                img.draw_line(84,150,140,150, color=user_color1, thickness=3)
                #加两侧
                img.draw_line(0,180,40,140, color=user_color, thickness=3)
                img.draw_line(224,180,184,140, color=user_color, thickness=3)
                img.draw_line(40,140,184,140, color=user_color, thickness=3)
            if(SYSTEM_MOD==1):
                #正后方
                img.draw_line(0,185,224,185, color=user_color2, thickness=3)
##############  STOP    ################################################


            lcd.display(img)
    except Exception as e:
        raise e
    finally:
        if not task is None:
            kpu.deinit(task)


if __name__ == "__main__":
    try:
        # main(anchors = anchors, labels=labels, model_addr=0x300000, lcd_rotation=0)
        main(anchors = anchors, labels=labels, model_addr="/sd/model-191966.kmodel")
    except Exception as e:
        sys.print_exception(e)
        lcd_show_except(e)
    finally:
        gc.collect()
